<application>
  <component name="GraziConfig">
    <option name="suppressingContext">
      <SuppressingContext>
        <option name="suppressed">
          <set>
            <option value="Quiche" />
            <option value="3,|an unexpected delay of 3 seconds is considered as several delays: of 3, 2 and 1 seconds, because otherwise this background thread would be sampled 3 times." />
            <option value="community|well, &quot;Idea&quot; it is community, and &quot;idea&quot; it is ultimate, but LLM uses upper-case variant https://packages.jetbrains.team/files/p/llm-videos/llm-videos/llm/video/llm-video-1.0.zip" />
            <option value="of bytes of|if it succeeded there will be an 'nmsize' attribute which indicates the number of bytes of instruction produced by the compile" />
            <option value="Wh|override fun getKey(sourcePath: String): LongArray { val stringKey = relativizer.toRelative(sourcePath).toByteArray() We should sort by target id for data locality - the high integer (high) is shifted to the higher 32 bits of the long value, while the low integer (low) occupies the lower 32 bits." />
            <option value="suggest|List of file extensions (without a leading dot) which the installer will suggest to associate with the product." />
            <option value="an|for instance, ShadowPainter updates the context from an outside" />
            <option value="dummy" />
            <option value="the|Returns a copy of the provided with darkness set to ." />
            <option value="out|if out jar doesn't exist, make sure that we do not to use existing cache - set `isRebuild` to true and clear caches in this case" />
            <option value="allow-listed|do not create an extension if not allow-listed" />
            <option value="under write" />
            <option value="an assert" />
            <option value="we aim|In the future, we aim to avoid .joinAll in runPostStartupActivities altogether." />
            <option value="gradle|gradle doesn't support correct presentation of assertion in console, use diff as a message (cause)" />
            <option value="depends" />
            <option value="Co|Converts this promise to an instance of ." />
            <option value="'" />
            <option value="(" />
            <option value="be used|Universal native file can be used by any platform" />
            <option value="selection|temporary state to make selection fully visible (scrolled in view)" />
            <option value="the|the value to normalize" />
            <option value="a nats server," />
            <option value="enumerate|during save, we enumerate strings, so we cannot save as a part of close, as in this case string enumerator maps maybe not saved (as being closed)" />
            <option value="re|returns true iff exists control flow path completing normally, i.e. not resulting in return,break,continue or exception thrown." />
            <option value="of bounds of|union of bounds of all default screen devices." />
            <option value="of the zip64 end of|disk number with the start of the zip64 end of central directory" />
            <option value="don't forget|if you will change it, don't forget to increase timeout in BackendOTSpansTransferTest" />
            <option value="crazy" />
            <option value="build|Currently, the flag is used for faster unit tests / debug IDE instance, because IDEA's build process (as of 14.1) ensures deletion of such information upon appearing new file for output root." />
            <option value="if|if chunk's SDK is 9 or higher, there is no way to specify full platform classpath because platform classes are stored in `jimage` binary files with unknown format." />
            <option value="The|The region of output you are interested in generating dependencies for." />
            <option value="community|well, &quot;Idea&quot; it is community, and &quot;idea&quot; it is ultimate, but LLM uses upper-case variant" />
            <option value="file|FileSource(relativePath = it.file, size = it.size, hash = it.hash, file = baseDir.resolve(it.file))" />
            <option value="hash4j" />
            <option value="a select is" />
            <option value="hang" />
            <option value="sub element|It can be in that case separator will be added to a group described in the &lt;add-to-group ...&gt; sub element." />
            <option value="a|This method allows delaying (if needed) execution of a given runnable until the editor is fully loaded." />
            <option value="of usage of|It should help to solve the problem of detecting from which source existing compilation outputs were produced (it's the problem of usage of portable caches and compilation outputs, produced by JPS)." />
            <option value="of the type of|a node of the type of this." />
            <option value="key -|used as a key - immutable instance cannot be used" />
            <option value="langPluginsResultDir" />
            <option value="opening project|if we are opening project in the current process (not yet PER_PROJECT), lock per-project directory" />
            <option value="adjustOptionsUI" />
            <option value="We|docked and sliding windows If there is a tool window on the same side, then we have to hide it, i.e., clear place for a tool window to be shown." />
            <option value="8|It is important to note that offset is non-negative and can be 4 or 8 bytes, depending on the size of the &quot;.values&quot; file." />
            <option value="Caveat|Caveat: do not touch telemetry API during init, it is not ready yet." />
            <option value="are provided|The first three arguments to the bootstrap methods are provided automatically by VM." />
            <option value="at|For a directory-based project, it's an arbitrary string specified by user at project creation or later in a project settings." />
            <option value="needed|these icons are only needed to prevent Swing from trying to fetch defaults with AWT ImageFetcher threads (IDEA-322089), but might as well just put something sensibly-looking there, just in case they show up due to some bug" />
            <option value="set|classLoader must be set - otherwise sub descriptor considered as inactive" />
            <option value="224|224 bit and not 256/512 - use a slightly shorter filename xxh3 is not used as it is not secure and moreover, better to stick to JDK API" />
            <option value="tipsPath" />
            <option value="SQLite connection" />
            <option value="enumerate|during save, we enumerate strings, so, we cannot save as a part of close, as in this case string enumerator maps maybe not saved (as being closed)" />
            <option value="8|[.values file offset 4 or 8 bytes], however, for unique integral keys enumerate_id isn't produced." />
            <option value="Later,|Later, it may be needed to implement more interfaces here." />
            <option value="}" />
            <option value="be used|universal native file can be used by any platform" />
            <option value="do|docked and sliding windows If there is a tool window on the same side, then we have to hide it, i.e., clear place for a tool window to be shown." />
            <option value="flag|See [https://stackoverflow.com/a/5428795](https://stackoverflow.com/a/5428795) about resolve flag." />
            <option value="resolveDependenciesMaxAttempts" />
            <option value="width|Splitter has width of one pixel - we need to step at least 2 pixels to be over an adjacent editor" />
            <option value="weird|In fact, both check that the node is visible, but in a rather weird way: the root is always considered visible, regardless of the `isRootVisible` value." />
            <option value="just|if we close the project at the end of the test, just mark it closed; if we are shutting down the entire test framework, proceed to full dispose" />
            <option value="2|2 fields below fully describe PMap configuration:" />
            <option value="allows ensure" />
            <option value="IntelliJ|Used directly by IntelliJ IDEA." />
            <option value="va|When we do compare two long values, the higher 32 bits (which contain the high integer) dictate the order." />
            <option value="plugin|Returns URL to plugin repository without a trailing slash." />
            <option value="gradle|gradle doesn't support correct presentation of assertion in console, use diff as a message" />
            <option value="weird|getting state after a load with an active controller can lead to weird issues" />
            <option value="reset|reset as bus will not remove disposed connection from a list immediately" />
            <option value="platform|Since we always want to load reflect from platform, we should force those classes with platform classloader as well." />
            <option value="ability|FileChannel is strongly required because only FileChannel provides `read(ByteBuffer dst, long position)` method - ability to read data without setting channel position, as setting channel position will require synchronization" />
            <option value="is hidden|When tool window is hidden by a shortcut, we want focus to return to previously focused splitters." />
            <option value="So|Sort the files heuristically to load the plugin jar containing plugin descriptors without extra ZipFile accesses." />
            <option value="build|Currently, the flag is used for faster unit tests / debug IDE instance, because an IDEA's build process (as of 14.1) ensures deletion of such information upon appearing new file for output root." />
            <option value="sub-stack" />
            <option value="a|It allows us to accumulate a larger chunk of data before writing, improving I/O efficiency, *without* requiring us to allocate a large buffer upfront for every archive, even small ones." />
            <option value="little bit" />
            <option value="of inheritors of|If a list of inheritors of sealed class has changed, it should be recompiled with all the inheritors Here we have a small optimization." />
            <option value="of comparison of|a comparator which receives a middle index and returns the result of comparison of the value at this index and the goal value (e.g 0 if found, -1 if the value[middleIndex] &lt; goal, or 1 if value[middleIndex] &gt; goal)" />
            <option value="close|clicks on the close window button don't count in determining whether we have a double click on the tab (IDEA-70403)" />
            <option value="is loaded|the first row is loaded by execute(), so do not step() again" />
            <option value="platform|Since we always want to load reflect from platform, we should force those classes with platform classloader as well" />
            <option value="of any of|only primitive, String, Class, Enum, another Annotation or array of any of these are allowed" />
            <option value="255|255 here is not a mistake - we want to explicitly set that corresponding color as non-transparent" />
            <option value="co|common-ide-modules.xml — shared set of product modules for regular IDE." />
            <option value="Re|Returns a workspace file:" />
            <option value="prepended|The plugin ID is automatically and implicitly prepended to it." />
            <option value="dumb" />
            <option value="size pairs int -" />
            <option value="4|[.values file offset 4 or 8 bytes], however, for unique integral keys enumerate_id isn't produced." />
            <option value="of the XML data of|the system ID of the XML data of the element." />
            <option value="Kotlin serialization" />
            <option value="of a computed list of|cache of a computed list of all parents (not only direct)" />
            <option value="`read|FileChannel is strongly required because only FileChannel provides `read(ByteBuffer dst, long position)` method - ability to read data without setting channel position, as setting channel position will require synchronization" />
            <option value="tool window|When tool window is hidden by a shortcut, we want focus to return to previously focused splitters." />
            <option value="anymore|After that, few of the most relevant displayed items are considered &quot;frozen&quot; and not re-sorted anymore, to avoid changes around the selected item that the user already sees and can interact with." />
            <option value="a single nats server cluster" />
            <option value="of names of|list of names of JAR files which cannot be included in the product 'lib' directory in plain form" />
            <option value="we )|non-bundled plugin may duplicated bundled one - first check non-bundled: any valid mismatch will lead to test failure - then check bundled: may be a mismatch due to a difference between bundled and non-bundled one (we )" />
            <option value="Gradle Daemon classpath|separate file to use in Gradle Daemon classpath" />
            <option value="dispose|separate disposable must be used, because container will dispose bus connections in a separate step" />
            <option value="whitespace|Case content is empty or all insignificant whitespace" />
            <option value="premature" />
            <option value="1)|we don't need to update digest for a bundled scheme because 1) it can be computed on demand later (because a bundled scheme is not mutable) 2) in the future user copy of a bundled scheme will use a bundled scheme as parent (not as full copy)" />
            <option value="so|some compilers (and compiler plugins) may produce different outputs for the same set of inputs." />
            <option value="e.g.|This can prevent tool windows in non-default view modes (e.g. 'Undock') to close when focus is transferred to a component not in tool window hierarchy, but logically belonging to it (e.g. when component is added to the window's layered pane)." />
            <option value="the|algorithm: 1. map version -&gt; int (and weight major, minor, micro accordingly) 2. compute distance between starting point and candidate 3. select the version with the smallest distance if two or more candidates have the same distance, the which one is returned is undefined" />
            <option value="master|Failed to get master reference: %v" />
          </set>
        </option>
      </SuppressingContext>
    </option>
    <option name="checkingContext">
      <CheckingContext>
        <option name="isCheckInStringLiteralsEnabled" value="true" />
      </CheckingContext>
    </option>
  </component>
</application>